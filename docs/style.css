/* style.css */

/* 1. Universal Box-Sizing:
   Stellt sicher, dass Padding und Border zur Breite/Höhe eines Elements gehören.
   Das macht Layouts vorhersehbarer und ist eine Best Practice.
*/
*, *::before, *::after {
    box-sizing: border-box;
}

/* 2. Grundlegende HTML- und Body-Styles:
   Verhindert horizontales Scrollen auf der Hauptebene, setzt Basis-Schriftarten
   und fügt den notwendigen oberen Abstand für den fixierten Header hinzu.
*/
html, body {
    width: 100%;             /* Stellt sicher, dass sie nie breiter als der Viewport sind */
    overflow-x: hidden;      /* Verhindert horizontales Scrollen der gesamten Seite */
    margin: 0;               /* Entfernt Standard-Browser-Margin */
    font-family: Arial, sans-serif;
    line-height: 1.6;
    color: #333;
    /* WICHTIG: Fügt Padding hinzu, um den Platz des fixierten Headers auszugleichen. */
    padding-top: 35px; /* Ausgleich für fixierten Header */
    scroll-behavior: smooth;
    scroll-padding-top: 65px;
}

/* 3. Header-Styling:
   Der obere Bereich der Seite mit Logo und Navigation.
   'position: fixed' hält ihn dauerhaft am oberen Rand des Viewports.
*/
header {
    background: #2E64FE;
    color: #fff;
    padding: 1rem 0;
    position: fixed;        /* Header bleibt fest am oberen Rand */
    top: 0;                 /* Am oberen Rand des Viewports */
    left: 0;                /* Am linken Rand des Viewports */
    width: 100%;            /* Volle Breite des Viewports */
    z-index: 100;           /* Stellt sicher, dass der Header über anderen Inhalten liegt */
}

/* 4. Navbar-Layout:
   Verwaltet das Layout von Logo, Navigationslinks und Hamburger-Button.
*/
.navbar {
    display: flex;
    justify-content: space-between; /* Logo links, Navi/Burger rechts */
    align-items: center;            /* Vertikal zentriert */
    padding: 0 20px;
    max-width: 1200px;              /* Maximale Breite für Desktop */
    margin: 0 auto;                 /* Zentriert die Navbar auf der Seite */
    min-height: 60px;               /* Gibt dem Header eine Mindesthöhe */
    flex-wrap: nowrap; /* Stellt sicher, dass die Elemente in einer Zeile bleiben */
    min-width: 0; /* Wichtig für Flex-Elemente in übergeordneten Flex-Containern, um Überlauf zu verhindern */
}

.logo {
    color: #fff;
    text-decoration: none;
    font-size: 1.5rem;
    font-weight: bold;
    z-index: 101; /* Stellt sicher, dass das Logo über dem Menü liegt (falls offen) */
    flex-shrink: 0; /* Verhindert, dass das Logo schrumpft, wenn Platz eng wird */
}

/* Styling für das Logo-Bild innerhalb des Headers */
.header-logo {
    height: 40px; /* Oder eine andere feste Höhe, die zu deinem Header passt */
    width: auto; /* Breite proportional anpassen */
    max-height: 100%; /* Stellt sicher, dass es nicht aus dem Header ragt */
}

/* 5. Navigationslinks (Allgemein und Desktop-Ansicht - jetzt immer im Hamburger-Stil): */
.nav-links {
    list-style: none;
    margin: 0;
    padding: 0;
    position: fixed; /* Position fixed relative to viewport */
    right: 0;
    top: 0;
    height: 100vh; /* Full viewport height */
    background-color: #2E64FE; /* Background color of the menu */
    display: flex; /* Display as flex column for vertical links */
    flex-direction: column;
    align-items: center; /* Center items horizontally */
    width: 60%; /* Menu takes 60% of viewport width */
    max-width: 300px; /* Maximum width for the menu */
    transform: translateX(100%); /* Hidden by default (slid out to the right) */
    transition: transform 0.5s ease-in-out; /* Smooth slide animation */
    z-index: 100; /* Ensure menu is above other content */
    padding-top: 80px; /* Padding from top for menu content */
    box-shadow: -5px 0 15px rgba(0,0,0,0.3); /* Shadow for depth */

    /* Allow vertical scrolling if content overflows */
    overflow-y: auto;
    -webkit-overflow-scrolling: touch; /* For smooth scrolling on iOS */
    max-height: 100vh; /* Ensures it doesn't extend beyond viewport height */
    flex-shrink: 0; /* Prevent the menu from shrinking in the header (it's fixed) */
    overflow-x: hidden; /* No horizontal scrolling within the menu */
    white-space: normal; /* Allow text to wrap within menu items */
}

/* Navigations-Listenelemente innerhalb des Menüs */
.nav-links li {
    margin: 6px 0; /* Vertikalen Abstand reduziert */
    padding-top: 5px;
    padding-bottom: 5px;
    opacity: 0; /* Hidden by default for animation */
    width: 100%;
    text-align: center;
    margin-left: 0; /* Sicherstellen, dass hier kein left margin ist */
    white-space: normal; /* Erlaubt Textumbruch für Menüpunkte, falls Text zu lang ist */
}

/* Stil für die eigentlichen Navigationslinks */
.nav-links a {
    color: #fff;
    text-decoration: none;
    padding: 5px 0;
    transition: color 0.3s ease;
}

.nav-links a:hover {
    color: #00bcd4;
}

/* Styling für den expliziten Trenner (nav-separator) */
.nav-separator {
    /* Standard-Trenner (Desktop-Verhalten): Unsichtbar, da immer Hamburger-Menü */
    display: none; /* Versteckt den Separator auf Desktop, wenn immer Hamburger-Menü */
    opacity: 0; /* Sicherheit, dass es unsichtbar ist */
}

/* Spezifisches Styling für Trenner mit Kategorie-Text im Hamburger-Menü */
.nav-category-separator {
    display: flex; /* Verwende Flexbox, um den Text und Linien zu zentrieren */
    align-items: center;
    justify-content: center;
    /* Volle Breite des Elternelements (.nav-links) */
    width: 100%; 
    /* Optional: Horizontaler Abstand vom Rand des Menüs.
       Wenn du den weißen Hintergrund bis zum wirklichen Rand des Menüs
       (ohne Padding der .nav-links) haben willst, dann hier 0px lassen.
       Wenn du einen kleinen Rand vom Menürand zum Trenner haben willst,
       dann hier z.B. 20px lassen.
    */
    padding: 0 0px; /* Horizontaler Padding vom Rand der Navigationsleiste, hier 0 für volle Breite */

    height: auto; /* Höhe passt sich dem Text an */
    background-color: transparent; /* Kein Hintergrund für das äußere Element */
    margin: 15px auto; /* Mehr Abstand für Kategorie-Trenner */
    
    color: #222; /* Dunkle Schriftfarbe */
    font-size: 1rem; /* Textgröße für Kategorie */
    font-weight: bold; /* Fettgedruckter Text */
    text-transform: uppercase; /* Optional: Text in Großbuchstaben */
    letter-spacing: 1px; /* Optional: Buchstabenabstand */
    
    opacity: 0; /* Standardmäßig unsichtbar für Animation */
    position: relative; /* Für die Pseudoelemente (Linien) */
}

/* Linien links und rechts vom Kategorie-Text im Hamburger-Menü */
.nav-category-separator span {
    position: relative;
    /* Hintergrundfarbe weiß für den Textbereich */
    background-color: #fff; /* Weißer Hintergrund für den Textbereich */
    /* Mehr vertikaler Padding für mehr Platz über und unter dem Text */
    padding: 10px 15px; /* Vertikaler und horizontaler Padding */
    /* NEU: WICHTIG: width: 100% und display: block für volle Hintergrundbreite */
    display: block; /* Stellt sicher, dass das Span die volle Breite annimmt */
    width: 100%; /* Der Hintergrund füllt jetzt die gesamte Breite des .nav-category-separator aus */
    text-align: center; /* Stellt sicher, dass der Text im Span zentriert bleibt */
    
    z-index: 1; /* Stellt sicher, dass der Text über den Linien liegt */
}
.nav-category-separator span::before {
    left: 0; /* Beginnt am linken Rand des span */
}
.nav-category-separator span::after {
    right: 0; /* Beginnt am rechten Rand des span */
}


/* Wenn das Navigationsmenü aktiv ist, sollen auch die Text-Trenner sichtbar sein */
.nav-active .nav-category-separator {
    opacity: 1;
    transition: opacity 0.5s ease-in;
    transition-delay: 0.3s; /* Etwas verzögert nach den Links erscheinen */
}


/* 6. Hamburger Menü Icon (Immer sichtbar): */
.burger {
    display: block; /* Immer das Hamburger-Icon anzeigen */
    cursor: pointer;
    background: none;
    border: none;
    padding: 0;
    z-index: 101; /* Sicherstellen, dass es anklickbar ist und über anderen Inhalten liegt */
    flex-shrink: 0; /* Verhindert, dass der Burger schrumpft */
}

.burger div {
    width: 25px;
    height: 3px;
    background-color: #fff;
    margin: 5px;
    transition: all 0.3s ease;
}

/* Klasse, die per JavaScript hinzugefügt wird, um das Menü zu öffnen */
.nav-active {
    transform: translateX(0%); /* Menü in den View schieben */
}

/* Animation für Menü-Links beim Öffnen */
.nav-active li {
    opacity: 1;
    transition: opacity 0.5s ease-in;
    /* Für gestaffelte Animation jedes li einzeln mit JS verzögern */
}

/* Burger-Icon-Animation beim Öffnen/Schließen (Kreuz-Effekt) */
.toggle .line1 {
    transform: rotate(-45deg) translate(-5px, 6px);
}
.toggle .line2 {
    opacity: 0;
}
.toggle .line3 {
    transform: rotate(45deg) translate(-5px, -6px);
}

/* 7. Hauptinhaltsbereiche: */
main {
    padding: 20px;
    max-width: 1200px;
    margin: 0 auto;
}

.hero {
    background: #e2e2e2;
    padding: 50px 20px;
    text-align: center;
    margin-bottom: 20px;
}

.content {
    background: #fff;
    padding: 30px 20px;
    margin-bottom: 20px;
    border-radius: 8px;
    word-wrap: break-word;
    overflow-wrap: break-word;
}

/* 8. Footer-Styling */
footer {
    background: #2E64FE;
    color: #fff;
    text-align: center;
    padding: 1rem 0;
    position: relative;
    bottom: 0;
    width: 100%;
}

/* 9. Keyframes für Link-Animation (kann entfernt werden, wenn keine gestaffelte Animation): */
@keyframes navLinkFade {
    from {
        opacity: 0;
        transform: translateX(50px);
    }
    to {
        opacity: 1;
        transform: translateX(0px);
    }
}

/* 10. Responsive Medien-Elemente: */
img {
    max-width: 100%;
    height: auto;
    display: block;
}

iframe, video {
    max-width: 100%;
    height: auto;
}

table {
    max-width: 100%;
    width: 100%;
    display: block;
    overflow-x: auto;
    border-collapse: collapse;
    border: none;
}

/* 11. Optional: Styling für Markdown-generierte Elemente */
#content-container h1, #content-container h2, #content-container h3,
#content-container h4, #content-container h5, #content-container h6 {
    color: #333;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    padding-bottom: 0.3em;
    border-bottom: 1px solid #eee;
}

#content-container p {
    margin-bottom: 1em;
}

#content-container ul, #content-container ol {
    margin-left: 20px;
    margin-bottom: 1em;
}

#content-container li {
    margin-bottom: 0.5em;
}

#content-container pre {
    background-color: #eee;
    padding: 15px;
    border-radius: 5px;
    overflow-x: auto;
    font-size: 0.9em;
    line-height: 1.4;
}

#content-container code {
    font-family: monospace;
    background-color: #e0e0e0;
    padding: 2px 4px;
    border-radius: 3px;
}

#content-container th, #content-container td {
    border: 2px solid #2E64FE;
    padding: 8px;
    text-align: left;
    word-wrap: break-word;
    overflow-wrap: break-word;
}

#content-container th {
    background-color: #f2f2f2;
}

#content-container blockquote {
    border-left: 4px solid #ccc;
    padding-left: 15px;
    color: #666;
    margin: 1em 0;
}

#content-container a {
    color: #007bff;
    text-decoration: none;
}

#content-container a:hover {
    text-decoration: underline;
}
